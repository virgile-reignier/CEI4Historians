<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:s="http://purl.oclc.org/dsdl/schematron"
    xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>ODD for Valentinois County Archives</title>
                <author>Virgile Reignier (PhD student at the Ecole nationale des
                    chartes-PSL)</author>
            </titleStmt>
            <publicationStmt>
                <p>This ODD is a test version built as part of the exploration of my thesis corpus.
                    It is available online via Github for discussion but not yet finalized</p>
            </publicationStmt>
            <notesStmt>
                <note corresp="https://www.theses.fr/s349095"/>
            </notesStmt>
            <sourceDesc>
                <bibl xml:id="vid_1997">
                    <title>Vocabulaire International de la Diplomatique</title>
                    <abbr>VID</abbr>
                    <author>Commission Internationale de Diplomatique</author>
                    <editor>Maria Milagros Cárcel Ortí</editor>
                    <pubPlace>Valence</pubPlace>
                    <publisher>Université de Valence</publisher>
                    <date>1997</date>
                    <ref target="http://www.cei.lmu.de/VID"/>
                </bibl>
                <bibl xml:id="adele_webapp">
                    <title>Album de diplomatique en ligne européen</title>
                    <abbr>Adele</abbr>
                    <author>Olivier Guyotjeannin</author>
                    <author>Ecole nationale des chartes</author>
                    <ref target="https://adele.chartes.psl.eu/"/>
                </bibl>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <div>
                <p>Born in 2004, the <ref target="http://www.cei.lmu.de/project">CEI</ref> is a
                    project to develop a standard for marking up charters with XML. Since 2019, this
                    standard has been integrated as an <ref
                        target="https://github.com/GVogeler/CEI2TEI">ODD</ref> into the TEI P5
                    framework. This ODD is written in addition to the previous to adapt the <ref
                        target="#vid_1997">diplomatic vocabulary</ref> to the historical analysis of
                    the charters.</p>
                <p>Rather than analyzing the form of the acts, our objective here is to use
                    diplomatic vocabulary to extract information about the persons and assets
                    mentioned in the acts, all from a quantitative perspective. We therefore propose
                    to add the following modifications:</p>
                <list>
                    <item>To avoid separating the people and organizations involved in the act from
                        those merely mentioned, we remove the legalActor tag and take the values of
                        its @type attribute and make them the values of the @role attribute, which
                        is now required for the persName and orgName tags, adding two new values
                        "mentioned" and "unknown".</item>
                    <item>We add new types to the diploPart tag: "appartClause" to annotate the
                        formulas that accompany property descriptions; "explaClause" to annotate the
                        explanations that expand on the scope and terms of the "dispositio";
                        "laudatio" to annotate the confirmations that are added to the act.</item>
                    <item>We add new tags: "asset" to annotate the goods and values mentioned in the
                        acts; "delimitation" to annotate the description of the limits in a
                        property.</item>
                    <item>Since we are working in the form of a database, we need an identifier for
                        each act (or similar), which constitutes a document in the database. We also
                        need an identifier for the mentions of persons, organizations, places,
                        roles, documents, and unit of measurement described in the acts, in order to
                        disambiguate the references and associate each mention to the entity or type
                        it refers to.</item>
                </list>
                <p>This schema was initially designed to be applied to files using XInclude to
                    insert index entities within each document. We had to abandon the use of this
                    technology because of incompatibilities with the database software used. The
                    integrity of the indexing of named entities is therefore achieved solely using
                    schematron rules, which has two disadvantages: all document files must be
                    located in a single folder for the relative path used for comparison to be
                    unique; the comparison of references contained in the dedicated attributes does
                    not apply from the second reference onwards in the event of a list.</p>
                <p>Checks that could not be carried out using schematron rules have been written in
                    the form of xQuery queries.</p>
                <schemaSpec ident="cei_for_historians"
                    source="https://raw.githubusercontent.com/virgile-reignier/CEI4Historians/main/ODD_compiled_tei_cei.xml"
                    start="TEI teiCorpus">
                    <!-- required modules -->
                    <moduleRef key="header"/>
                    <moduleRef key="linking"/>
                    <moduleRef key="core"/>
                    <moduleRef key="tei"/>
                    <moduleRef key="textstructure"/>
                    <!-- optional modules -->
                    <moduleRef key="namesdates"/>
                    <moduleRef key="transcr"/>
                    <moduleRef key="figures"/>
                    <moduleRef key="msdescription"/>
                    <moduleRef key="textcrit"/>
                    <moduleRef key="gaiji"/>
                    <moduleRef key="certainty"/>
                    <moduleRef key="analysis"/>
                    <moduleRef key="corpus"/>
                    <!-- specific module of the cei -->
                    <moduleRef key="derived-module-tei_cei"/>
                    <!-- Proposals to modify CEI2TEI -->
                    <elementSpec ident="diploPart" mode="change">
                        <attList>
                            <attDef ident="type" mode="change" usage="req">
                                <valList mode="change" type="closed">
                                    <valItem ident="appartClause" mode="add">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/#204">VID
                                                204</ref>. (Appartenance clause). The things and
                                            rights that belong to a property, often in the form of a
                                            list accompanying the designation of the
                                            property.</desc>
                                    </valItem>
                                    <valItem ident="explaClause" mode="add">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/#203">VID
                                                203</ref>. (Explanation clause). Complete a clause
                                            to clarify its scope or terms.</desc>
                                    </valItem>
                                    <valItem ident="laudatio" mode="add">
                                        <desc><ref target="http://www.cei.lmu.de/VID/#334">VID
                                                334</ref>. Consent and confirmation of a decision by
                                            a parent or lord.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="asset" mode="add">
                        <desc>Describes the goods and values mentioned in the acts.</desc>
                        <classes>
                            <memberOf key="att.global"/>
                            <memberOf key="att.typed"/>
                            <memberOf key="model.inter"/>
                        </classes>
                        <content>
                            <alternate>
                                <macroRef key="macro.specialPara"/>
                                <classRef key="model.measureLike" minOccurs="0"/>
                            </alternate>
                        </content>
                        <attList>
                            <attDef ident="type" mode="replace" usage="req">
                                <valList type="closed">
                                    <valItem ident="realEstate">
                                        <desc>Immovable property such as lands or buildings</desc>
                                    </valItem>
                                    <valItem ident="amount">
                                        <desc>Value in cash or kind, expressed absolutely or
                                            relatively</desc>
                                    </valItem>
                                    <valItem ident="rents">
                                        <desc>Regular collection of a sum in kind or in cash</desc>
                                    </valItem>
                                    <valItem ident="fiefdom">
                                        <desc>Property or income obtained by investiture</desc>
                                    </valItem>
                                    <valItem ident="justice">
                                        <desc>Power to pass judgments and impose sentences</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="delimitation" mode="add">
                        <desc>Definition of a limit, material or legal, in the possession of a
                            property.</desc>
                        <classes>
                            <memberOf key="att.global"/>
                            <memberOf key="att.typed"/>
                            <memberOf key="model.inter"/>
                        </classes>
                        <content>
                            <macroRef key="macro.specialPara"/>
                        </content>
                        <attList>
                            <attDef ident="type" mode="replace" usage="req">
                                <valList type="closed">
                                    <valItem ident="addition">
                                        <desc>Description of an additional property or a right
                                            associated with a property</desc>
                                    </valItem>
                                    <valItem ident="subtraction">
                                        <desc>Description of an exception within a property, whether
                                            material, a right of use or a right to exercise
                                            justice</desc>
                                    </valItem>
                                    <valItem ident="boundary">
                                        <desc>Description of a physical element that separates one
                                            property from another.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <!-- Proposals to modify CEI2TEI and using TEI to index entities -->
                    <elementSpec ident="legalActor" mode="delete"/>
                    <elementSpec ident="persName" mode="change">
                        <constraintSpec ident="persNameRoleReq" scheme="schematron">
                            <desc>The @role attribute is required in the body text</desc>
                            <constraint>
                                <s:rule context="//tei:body//tei:persName">
                                    <s:assert test="@role">The element must have the @role attribute
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <constraintSpec ident="persNameNymRefReq" scheme="schematron">
                            <desc>The @nymRef attribute is required in the body text</desc>
                            <constraint>
                                <s:rule context="//tei:body//tei:persName">
                                    <s:assert test="@nymRef">The element must have the @nymRef
                                        attribute </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <constraintSpec ident="persNameNymRefMatchXml:id" scheme="schematron">
                            <desc>The @nymRef must match an @xml:id on the index</desc>
                            <constraint>
                                <s:rule context="//tei:persName[@nymRef]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-persons-uri"
                                        value="resolve-uri('../index/index_persons.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-persons-uri)">The file
                                        index_persons.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-persons-uri)//*[@xml:id = substring-after(current()/@nymRef, '#')]"
                                        >The value of @nymRef must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="role" usage="rec" mode="replace">
                                <desc>This attribute allows to indicate the role of the person in
                                    the act on the model of the attribute type of the tag legalActor
                                    in tei_cei.odd. All allowed values are copied from this scheme,
                                    except for the last two.</desc>
                                <valList type="closed">
                                    <valItem ident="issuer">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?16">VID
                                                16</ref>. The party whose authority issues the
                                            document. A lord or judge issuing a ruling is the
                                            issuer. </desc>
                                    </valItem>
                                    <valItem ident="recipient">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?17">VID
                                                17</ref>. The party to whom the act of the document
                                            is addressed.</desc>
                                    </valItem>
                                    <valItem ident="beneficiary">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?17">VID
                                                17</ref>. In some cases, the party to whom the act
                                            of the document is addressed is not the party whose
                                            benefit is intended, in which case the latter should be
                                            marked as the beneficiary.</desc>
                                    </valItem>
                                    <valItem ident="witness">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?263">VID
                                                263</ref>. Someone who stands as a legal witness of
                                            the act, generally through subscription. When something
                                            is done in the presence of a judge, the judge is marked
                                            as a witness. </desc>
                                    </valItem>
                                    <valItem ident="notary">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?273">VID
                                                273</ref>. Someone who is a professional redactor of
                                            acts, with a legal authority in their preparation. May
                                            be the same person as, but separate conceptually from
                                            the scribe, who does not bear a legal role in the
                                            act.</desc>
                                    </valItem>
                                    <valItem ident="promisor">
                                        <desc> The party of a contract who makes a promise. All
                                            kinds of promisors are meant, which may include
                                            lessors/lessees, contractors, debtors, etc. </desc>
                                    </valItem>
                                    <valItem ident="promisee">
                                        <desc> The party of a contract who is on the receiving end a
                                            promise. May also be a promisor where there is a mutual
                                            trade. </desc>
                                    </valItem>
                                    <valItem ident="intervenor">
                                        <desc> cf. <ref
                                                target="http://www.cei.lmu.de/VID/VID.php?66">VID
                                                66</ref>. A party who joins a legal process by the
                                            authority of the judicial system, who is not
                                            (originally) party to the contract. May be used for
                                            legal intervenors, advocates, procurators, accusers
                                            (where said are not recipients or beneficiaries),
                                            petitioners/sponsors who are not recipients or
                                            beneficiaries of the resulting act, judges (where they
                                            are not acting as issuers or witnesses), guarantors,
                                            etc. </desc>
                                    </valItem>
                                    <valItem ident="other">
                                        <desc> Any legal actor that cannot fit into the other
                                            categories here. Please consider submitting an issue on
                                            GitHub explaining this use.</desc>
                                    </valItem>
                                    <valItem ident="sigillant">
                                        <desc>
                                            <ref target="http://www.cei.lmu.de/VID/VID.php?503">VID
                                                503</ref>. The owner of a seal.</desc>
                                    </valItem>
                                    <valItem ident="third">
                                        <desc> A third-party is anyone who is not a party to a
                                            contract or act but might be affected or involved.
                                        </desc>
                                    </valItem>
                                    <!-- Beginning of the new values -->
                                    <valItem ident="mentioned">
                                        <desc>Any person mentioned in the act who is not a legal
                                            actor, such as a relative or neighbor.</desc>
                                    </valItem>
                                    <valItem ident="unknown">
                                        <desc>Person mentioned in a document without it being
                                            possible to determine his or her role, for example
                                            because of a gap in the document</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                            <attDef ident="nymRef" mode="change" usage="rec"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="relation" mode="change">
                        <classes mode="change">
                            <memberOf key="model.persNamePart"/>
                        </classes>
                        <content>
                            <macroRef key="macro.specialPara"/>
                        </content>
                        <constraintSpec ident="passiveMatchXml:id" scheme="schematron">
                            <desc>The @passive attribute must match an @xml:id on the index.</desc>
                            <constraint>
                                <s:rule context="//*[@passive]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-persons-uri"
                                        value="resolve-uri('../index/index_persons.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-persons-uri)">The file
                                        index_persons.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-persons-uri)//*[@xml:id = substring-after(current()/@passive, '#')]"
                                        >The value of @passive must match an @xml:id on the
                                        index.</s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <constraintSpec ident="activeMatchXml:id" scheme="schematron">
                            <desc>The @active attribute must match an @xml:id on the index.
                                Unfortunately the rule only applies to the first term in the case of
                                multiple values.</desc>
                            <constraint>
                                <s:rule context="//*[@active]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-persons-uri"
                                        value="resolve-uri('../index/index_persons.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-persons-uri)">The file
                                        index_persons.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-persons-uri)//*[@xml:id = substring-after(current()/@active, '#')] or document($index-persons-uri)//*[@xml:id = substring-after(substring-before(current()/@active, ' '), '#')]"
                                        >The value of @active must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <constraintSpec ident="mutualMatchXml:id" scheme="schematron">
                            <desc>The @mutual attribute must match an @xml:id on the index.
                                Unfortunately the rule only applies to the first term in the case of
                                multiple values.</desc>
                            <constraint>
                                <s:rule context="//*[@mutual]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-persons-uri"
                                        value="resolve-uri('../index/index_persons.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-persons-uri)">The file
                                        index_persons.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-persons-uri)//*[@xml:id = substring-after(current()/@mutual, '#')] or document($index-persons-uri)//*[@xml:id = substring-after(substring-before(current()/@mutual, ' '), '#')]"
                                        >The value of @mutual must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="name" mode="replace" usage="req">
                                <valList type="closed">
                                    <valItem ident="fam">
                                        <desc>Family relationship</desc>
                                    </valItem>
                                    <valItem ident="vas">
                                        <desc>Loyalty to a lord, often in exchange for goods</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                        <remarks>
                            <p>We modify this element so that it describes the relationships
                                mentioned in the texts and not just a general description of these
                                relationships in the header.</p>
                        </remarks>
                    </elementSpec>
                    <elementSpec ident="ref" mode="change">
                        <constraintSpec ident="refTypeReq" scheme="schematron">
                            <desc>The @type attribute is required in the body text</desc>
                            <constraint>
                                <s:rule context="//tei:body//tei:ref">
                                    <s:assert test="@type">The element must have the @type attribute
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" mode="replace" usage="rec">
                                <valList type="closed">
                                    <valItem ident="confirmAct">
                                        <desc><ref target="http://www.cei.lmu.de/VID/#51">VID
                                                51a</ref>. the reference to the act which is the
                                            subject of the confirmation.</desc>
                                    </valItem>
                                    <valItem ident="inspeximé">
                                        <desc><ref target="http://www.cei.lmu.de/VID/#67">VID
                                                67b</ref>. Act copied from an earlier document,
                                            recognised as authentic by an authority.</desc>
                                    </valItem>
                                    <valItem ident="notarialCopy">
                                        <desc><ref target="http://www.cei.lmu.de/VID/#59">VID
                                                59</ref>. Act copied by a notary.</desc>
                                    </valItem>
                                    <valItem ident="mentioned">
                                        <desc>Any document to which reference is made in a text,
                                            without having a direct legal role in relation to the
                                            provisions of the act which mentions it.</desc>
                                    </valItem>
                                    <valItem ident="unknown">
                                        <desc>Act mentioned in a document without it being possible
                                            to determine his or her role, for example because of a
                                            gap.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <!-- Using TEI to index entities -->
                    <elementSpec ident="roleName" mode="change">
                        <constraintSpec ident="roleNameNymRefMatchXml:id" scheme="schematron">
                            <desc>The @nymRef attribute must match an @xml:id on the index.
                                Unfortunately the rule only applies to the first term in the case of
                                multiple values.</desc>
                            <constraint>
                                <s:rule context="//tei:roleName[@nymRef]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-persons-uri"
                                        value="resolve-uri('../index/index_persons.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-persons-uri)">The file
                                        index_persons.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-persons-uri)//*[@xml:id = substring-after(current()/@nymRef, '#')] or document($index-persons-uri)//*[@xml:id = substring-after(substring-before(current()/@nymRef, ' '), '#')]"
                                        >The value of @nymRef must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="nymRef" mode="change" usage="req">
                                <desc>This attribute is necessary to attach this element to the
                                    referential entities to which it applies.</desc>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="placeName" mode="change">
                        <constraintSpec ident="placeNameNymRefReq" scheme="schematron">
                            <desc>The @nymRef attribute is required in the body text</desc>
                            <constraint>
                                <s:rule context="//tei:body//tei:placeName">
                                    <s:assert test="@nymRef">The element must have the @nymRef
                                        attribute </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <constraintSpec ident="placeNameNymRefMatchXml:id" scheme="schematron">
                            <desc>@nymRef must match an @xml:id on the index</desc>
                            <constraint>
                                <s:rule context="//tei:placeName[@nymRef]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-places-uri"
                                        value="resolve-uri('../index/index_places.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-places-uri)">The file
                                        index_places.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-places-uri)//*[@xml:id = substring-after(current()/@nymRef, '#')]"
                                        >The value of @nymRef must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="nymRef" mode="change" usage="rec"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="measure" mode="change">
                        <constraintSpec ident="unitMatchXml:id" scheme="schematron">
                            <desc>@unit must match an @xml:id on the index</desc>
                            <constraint>
                                <s:rule context="//tei:measure[@unit]">
                                    <s:let name="base-uri" value="base-uri()"/>
                                    <s:let name="index-units-uri"
                                        value="resolve-uri('../index/index_units_measure.xml', $base-uri)"/>
                                    <s:assert test="doc-available($index-units-uri)">The file
                                        index_units_measure.xml cannot be found. </s:assert>
                                    <s:assert
                                        test="document($index-units-uri)//*[@xml:id = current()/@unit]"
                                        >The value of @unit must match an @xml:id on the index.
                                    </s:assert>
                                </s:rule>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="unit" mode="replace" usage="req">
                                <desc>This attribute is necessary to link a unit of measurement to a
                                    referential entity.</desc>
                                <datatype>
                                    <dataRef key="teidata.pointer"/>
                                </datatype>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="teiCorpus" mode="change">
                        <content>
                            <sequence>
                                <elementRef key="teiHeader"/>
                                <classRef key="model.resource" minOccurs="0" maxOccurs="unbounded"/>
                                <classRef key="model.describedResource" minOccurs="0"
                                    maxOccurs="unbounded"/>
                            </sequence>
                        </content>
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                        <remarks>
                            <p>Since we are working with a database, we do not need to align the TEI
                                documents in the same teiCorpus file, they only need to be aligned
                                in the same collection so that an xQuery function can look up the
                                general metadata of the teiCorpus when useful.</p>
                        </remarks>
                    </elementSpec>
                    <elementSpec ident="TEI" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="person" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="personGrp" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="org" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="place" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <constraintSpec ident="locationMatchXml:id" scheme="schematron">
                        <desc>@corresp in location tag must match an @xml:id on the index</desc>
                        <constraint>
                            <s:rule context="//tei:place//tei:location">
                                <s:assert
                                    test="not(contains(current()/@corresp, '#')) or //*[@xml:id = substring-after(current()/@corresp, '#')]"
                                    >The value of @corresp must match an @xml:id in this
                                    file.</s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                    <elementSpec ident="bibl" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                        </attList>
                    </elementSpec>
                    <constraintSpec ident="sourceMatchXml:id" scheme="schematron">
                        <desc>@source must match an @xml:id on the corpus</desc>
                        <constraint>
                            <s:rule context="//tei:profileDesc//*[@source]">
                                <s:let name="base-uri" value="base-uri()"/>
                                <s:let name="corpus-uri"
                                    value="resolve-uri('../corpus.xml', $base-uri)"/>
                                <s:assert test="doc-available($corpus-uri)"> The file ../corpus.xml
                                    cannot be found. </s:assert>
                                <s:assert
                                    test="document($corpus-uri)//*[@xml:id = substring-after(current()/@source, '#')]"
                                    > The value of @source must match an @xml:id in ../corpus.xml.
                                </s:assert>
                            </s:rule>
                        </constraint>
                    </constraintSpec>
                    <elementSpec ident="label" mode="change">
                        <attList>
                            <attDef ident="xml:id" mode="change" usage="req"/>
                            <attDef ident="type" mode="replace" usage="req">
                                <valList type="closed">
                                    <valItem ident="money">
                                        <desc>Currency</desc>
                                    </valItem>
                                    <valItem ident="nonCash">
                                        <desc>Descriptive unit of an in kind</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                </schemaSpec>
            </div>
        </body>
    </text>
</TEI>
